name: Docs Build & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: docs-pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4 # pin to SHA for codacy approval
        with:
          version: 10

      - name: Setup Node.js (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build monorepo (schemas first)
        run: pnpm -w -r --filter @roler/schemas build

      - name: Generate OpenAPI
        run: pnpm -w --filter @roler/docs-site docs:openapi

      - name: Generate TypeDoc Markdown
        run: pnpm -w --filter @roler/docs-site docs:ts

      - name: Generate OpenAPI Pages (MDX)
        working-directory: packages/docs-site/website
        run: node ../node_modules/@docusaurus/core/bin/docusaurus.mjs gen-api-docs roler

      - name: Build Docusaurus
        run: pnpm -w --filter @roler/docs-site build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: packages/docs-site/website/build

  deploy:
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
