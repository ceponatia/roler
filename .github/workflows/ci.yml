name: CI

on:
  pull_request:
  push:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Setup Node & pnpm
        uses: ./.github/actions/setup-node-pnpm
        with:
          node: ${{ env.NODE_VERSION }}
          # pnpm version omitted; action will use package.json#packageManager

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Setup Node & pnpm
        uses: ./.github/actions/setup-node-pnpm
        with:
          node: ${{ env.NODE_VERSION }}
          # pnpm version omitted; action will use package.json#packageManager

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # ðŸ”‘ Build first so @roler/schemas is available to @roler/extensions typecheck
      - name: Build (project refs)
        run: pnpm -r build

      - name: Typecheck
        run: pnpm -r typecheck

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Setup Node & pnpm
        uses: ./.github/actions/setup-node-pnpm
        with:
          node: ${{ env.NODE_VERSION }}
          # pnpm version omitted; action will use package.json#packageManager

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Optional but safe: build before tests when packages import each other by name
      - name: Build (project refs)
        run: pnpm -r build

      - name: Run tests
        run: pnpm test -- --run
